/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ParioLocker,
  ParioLockerInterface,
} from "../../../contracts/Locker.sol/ParioLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "GovernanceChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockDate",
        type: "uint256",
      },
    ],
    name: "LockAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "LockDescriptionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "LockOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockedAt",
        type: "uint256",
      },
    ],
    name: "LockRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUnlockDate",
        type: "uint256",
      },
    ],
    name: "LockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LockVested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "allLpTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allNormalTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cumulativeLockInfo",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newUnlockDate",
        type: "uint256",
      },
    ],
    name: "editLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "editLockDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getCumulativeLpTokenLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ParioLocker.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCumulativeLpTokenLockInfoAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ParioLocker.CumulativeLockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getCumulativeNormalTokenLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ParioLocker.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCumulativeNormalTokenLockInfoAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ParioLocker.CumulativeLockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getLockAt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getLockById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getLocksForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalLockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "lpLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "lpLockForUserAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "lpLocksForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tgeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycleBps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "multipleVestingLock",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "normalLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "normalLockForUserAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "normalLocksForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct ParioLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "renounceLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalLockCountForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "totalLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycleBps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "vestingLock",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "withdrawableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d3362000023565b62000073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613ff380620000836000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063a57e31411161011a578063d3cac885116100ad578063e3676f881161007c578063e3676f8814610495578063eb80bdae146104a8578063eeacf786146104bb578063f2fde38b146104ce578063fd981c66146104e157600080fd5b8063d3cac885146103ed578063da1d8cff14610400578063e0da83ce14610413578063e1444fd61461043357600080fd5b8063b3b9aa48116100e9578063b3b9aa48146103ac578063b982922e146103bf578063cb645e32146103c7578063cd83eadc146103da57600080fd5b8063a57e314114610360578063a97af1f214610373578063aec640c614610386578063aef0e5401461039957600080fd5b8063618df7a31161019257806376c128221161016157806376c12822146102f25780637e6706d3146103125780638da5cb5b14610332578063a20b8c181461034d57600080fd5b8063618df7a3146102b15780636198e339146102c45780636dbdeab3146102d7578063715018a6146102ea57600080fd5b80631982242c116101ce5780631982242c1461026c578063332f26d714610274578063475831c8146102945780635a04fb691461029c57600080fd5b8063072793571461020057806307873ef11461022657806308f12470146102395780630d4f581a14610259575b600080fd5b61021361020e3660046135cb565b6104e9565b6040519081526020015b60405180910390f35b610213610234366004613651565b61062e565b61024c61024736600461366e565b610655565b60405161021d9190613782565b61024c61026736600461366e565b6107a7565b6102136107c2565b610287610282366004613795565b6107e3565b60405161021d91906137ca565b61021361092a565b6102af6102aa36600461382c565b610936565b005b61024c6102bf36600461385c565b610ac9565b6102af6102d236600461366e565b610b3e565b6102136102e536600461366e565b610bc7565b6102af610bde565b610305610300366004613888565b610bf2565b60405161021d91906138aa565b61032561032036600461366e565b610d48565b60405161021d919061391a565b6000546040516001600160a01b03909116815260200161021d565b61032561035b36600461366e565b610dbf565b6102af61036e36600461366e565b610deb565b6102af61038136600461385c565b610df9565b610305610394366004613888565b610e3b565b6102876103a7366004613651565b610f86565b6102af6103ba366004613949565b61106c565b610213611303565b6102136103d5366004613975565b61130f565b6102136103e8366004613651565b6114f5565b6102af6103fb366004613a1a565b611513565b61028761040e366004613651565b6115c3565b610426610421366004613aab565b6116a1565b60405161021d9190613b89565b61046f610441366004613651565b6008602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b0394851681529390921660208401529082015260600161021d565b6102136104a3366004613651565b6118b0565b6102136104b6366004613651565b6118d1565b61024c6104c936600461385c565b6118f2565b6102af6104dc366004613651565b611967565b600154610213565b60006001600160a01b03861661051a5760405162461bcd60e51b815260040161051190613bc1565b60405180910390fd5b6000841161056a5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610511565b4283116105c55760405162461bcd60e51b815260206004820152602360248201527f556e6c6f636b20646174652073686f756c6420626520696e207468652066757460448201526275726560e81b6064820152608401610511565b6105d8878787878760008060008a6119dd565b90506105e686333087611a2b565b807f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8789878760405161061c9493929190613be8565b60405180910390a29695505050505050565b6001600160a01b038116600090815260026020526040812061064f90611bca565b92915050565b61065d61347f565b600161066883611bd4565b8154811061067857610678613c11565b60009182526020918290206040805161016081018252600b9093029091018054835260018101546001600160a01b03908116948401949094526002810154909316908201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820180549192916101408401919061071e90613c27565b80601f016020809104026020016040519081016040528092919081815260200182805461074a90613c27565b80156107975780601f1061076c57610100808354040283529160200191610797565b820191906000526020600020905b81548152906001019060200180831161077a57829003601f168201915b5050505050815250509050919050565b6107af61347f565b6001828154811061067857610678613c11565b60006107cc61092a565b6107d4611303565b6107de9190613c77565b905090565b6001600160a01b038316600090815260096020526040902060609061080790611bca565b821061083e576001600160a01b038416600090815260096020526040902060019061083190611bca565b61083b9190613c8a565b91505b600061084a8484613c8a565b610855906001613c77565b90506000816001600160401b0381111561087157610871613529565b6040519080825280602002602001820160405280156108aa57816020015b61089761347f565b81526020019060019003908161088f5790505b5090506000855b85811161091c576001600160a01b03881660009081526009602052604090206108de906102479083611c29565b8383815181106108f0576108f0613c11565b6020026020010181905250818061090690613c9d565b925050808061091490613c9d565b9150506108b1565b5090925050505b9392505050565b60006107de6006611bca565b8161094081611bd4565b506000600161094e85611bd4565b8154811061095e5761095e613c11565b60009182526020909120600b9091020160028101549091506001600160a01b031633811461099e5760405162461bcd60e51b815260040161051190613cb6565b6002820180546001600160a01b0319166001600160a01b0386811691909117909155600180840154821660009081526008602052604090209081015490911615801590610a30576001600160a01b0383166000908152600260205260409020610a079088611c35565b506001600160a01b0386166000908152600260205260409020610a2a9088611c41565b50610a77565b6001600160a01b0383166000908152600360205260409020610a529088611c35565b506001600160a01b0386166000908152600360205260409020610a759088611c41565b505b604080518881526001600160a01b03858116602083015288168183015290517f9075ad040756c0d8743a1fed927066a92c4755071615bf61e04b17583d961caf9181900360600190a150505050505050565b610ad161347f565b81610adb846118d1565b11610b185760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610511565b6001600160a01b0383166000908152600360205260409020610923906102479084611c29565b80610b4881611bd4565b5060006001610b5684611bd4565b81548110610b6657610b66613c11565b600091825260209091206002600b90920201908101549091506001600160a01b03163314610ba65760405162461bcd60e51b815260040161051190613cb6565b600681015415610bbe57610bb981611c4d565b505050565b610bb981611fe2565b600080610bd383610655565b905061092381612204565b610be6612300565b610bf0600061235a565b565b6060610bfe6006611bca565b8210610c1d576001610c106006611bca565b610c1a9190613c8a565b91505b6000610c298484613c8a565b610c34906001613c77565b90506000816001600160401b03811115610c5057610c50613529565b604051908082528060200260200182016040528015610c9b57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610c6e5790505b5090506000855b858111610d3d5760086000610cb8600684611c29565b6001600160a01b03908116825260208083019390935260409182016000208251606081018452815483168152600182015490921693820193909352600290920154908201528351849084908110610d1157610d11613c11565b60200260200101819052508180610d2790613c9d565b9250508080610d3590613c9d565b915050610ca2565b509095945050505050565b604080516060810182526000808252602082018190529181019190915260086000610d74600685611c29565b6001600160a01b039081168252602080830193909352604091820160002082516060810184528154831681526001820154909216938201939093526002909201549082015292915050565b604080516060810182526000808252602082018190529181019190915260086000610d74600485611c29565b610df6816000610936565b50565b610e01612300565b816001600160a01b038116610e285760405162461bcd60e51b815260040161051190613cf8565b81610e35600085856123aa565b50505050565b6060610e476004611bca565b8210610e66576001610e596004611bca565b610e639190613c8a565b91505b6000610e728484613c8a565b610e7d906001613c77565b90506000816001600160401b03811115610e9957610e99613529565b604051908082528060200260200182016040528015610ee457816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610eb75790505b5090506000855b858111610d3d5760086000610f01600484611c29565b6001600160a01b03908116825260208083019390935260409182016000208251606081018452815483168152600182015490921693820193909352600290920154908201528351849084908110610f5a57610f5a613c11565b60200260200101819052508180610f7090613c9d565b9250508080610f7e90613c9d565b915050610eeb565b6001600160a01b038116600090815260026020526040812060609190610fab90611bca565b90506000816001600160401b03811115610fc757610fc7613529565b60405190808252806020026020018201604052801561100057816020015b610fed61347f565b815260200190600190039081610fe55790505b50905060005b82811015611064576001600160a01b0385166000908152600260205260409020611034906102479083611c29565b82828151811061104657611046613c11565b6020026020010181905250808061105c90613c9d565b915050611006565b509392505050565b8261107681611bd4565b506000600161108486611bd4565b8154811061109457611094613c11565b600091825260209091206002600b90920201908101549091506001600160a01b031633146110d45760405162461bcd60e51b815260040161051190613cb6565b60098101541561111a5760405162461bcd60e51b8152602060048201526011602482015270131bd8dac81dd85cc81d5b9b1bd8dad959607a1b6044820152606401610511565b82156111bb578060050154831015801561113357504283115b6111b35760405162461bcd60e51b8152602060048201526044602482018190527f4e657720756e6c6f636b2074696d652073686f756c64206e6f74206265206265908201527f666f7265206f6c6420756e6c6f636b2074696d65206f722063757272656e742060648201526374696d6560e01b608482015260a401610511565b600581018390555b831561129f57806003015484101561122f5760405162461bcd60e51b815260206004820152603160248201527f4e657720616d6f756e742073686f756c64206e6f74206265206c657373207468604482015270185b8818dd5c9c995b9d08185b5bdd5b9d607a1b6064820152608401610511565b60008160030154856112419190613c8a565b9050801561129d576003820185905560018201546001600160a01b03166000908152600860205260409020600281015461127c908390613c77565b6002820155600183015461129b906001600160a01b0316333085611a2b565b505b505b805460018201546002830154600384015460058501546040517fa8b26360df8d5e154ffa5a8a7e894e85f781acfbbef0b744fb9551d8fd0fd36c946112f4946001600160a01b03918216949116929091613be8565b60405180910390a25050505050565b60006107de6004611bca565b60006001600160a01b0389166113375760405162461bcd60e51b815260040161051190613bc1565b600087116113875760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610511565b4286116113d65760405162461bcd60e51b815260206004820181905260248201527f54474520646174652073686f756c6420626520696e20746865206675747572656044820152606401610511565b600084116114165760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206379636c6560981b6044820152606401610511565b6000831161145f5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206269707320666f72206379636c6560501b6044820152606401610511565b61271061146c8487613c77565b111561148a5760405162461bcd60e51b815260040161051190613d21565b61149b8a8a8a8a8a8a8a8a8a6119dd565b90506114a98933308a611a2b565b807f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8a8c8a8a6040516114df9493929190613be8565b60405180910390a25b9998505050505050505050565b60006115008261062e565b611509836118d1565b61064f9190613c77565b8161151d81611bd4565b506000600161152b85611bd4565b8154811061153b5761153b613c11565b600091825260209091206002600b90920201908101549091506001600160a01b0316331461157b5760405162461bcd60e51b815260040161051190613cb6565b600a81016115898482613db9565b506040518481527fe4a1120fd509c50aec65802fd3c3c9a4b72bf746fe9a552396185c6de928e8aa9060200160405180910390a150505050565b6001600160a01b0381166000908152600360205260408120606091906115e890611bca565b90506000816001600160401b0381111561160457611604613529565b60405190808252806020026020018201604052801561163d57816020015b61162a61347f565b8152602001906001900390816116225790505b50905060005b82811015611064576001600160a01b0385166000908152600360205260409020611671906102479083611c29565b82828151811061168357611683613c11565b6020026020010181905250808061169990613c9d565b915050611643565b60606001600160a01b0388166116c95760405162461bcd60e51b815260040161051190613bc1565b8a891461170c5760405162461bcd60e51b815260206004820152601160248201527013195b99dd1a081b5a5cdb585d18da1959607a1b6044820152606401610511565b42861161175b5760405162461bcd60e51b815260206004820181905260248201527f54474520646174652073686f756c6420626520696e20746865206675747572656044820152606401610511565b6000841161179b5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206379636c6560981b6044820152606401610511565b6000851180156117ac575061271085105b6117ef5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206269707320666f722054474560601b6044820152606401610511565b600083118015611800575061271083105b6118455760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206269707320666f72206379636c6560501b6044820152606401610511565b6127106118528487613c77565b11156118705760405162461bcd60e51b815260040161051190613d21565b6118a08c8c8c8c8c8c60405180608001604052808e81526020018d81526020018c81526020018b815250896123cd565b9c9b505050505050505050505050565b6001600160a01b038116600090815260096020526040812061064f90611bca565b6001600160a01b038116600090815260036020526040812061064f90611bca565b6118fa61347f565b816119048461062e565b116119415760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610511565b6001600160a01b0383166000908152600260205260409020610923906102479084611c29565b61196f612300565b6001600160a01b0381166119d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610511565b610df68161235a565b60008715611a0b5760006119f08a61263a565b9050611a038b8b838b8b8b8b8b8b61275b565b9150506114e8565b611a1d8a8a60008a8a8a8a8a8a61275b565b9a9950505050505050505050565b836001600160a01b038116611a525760405162461bcd60e51b815260040161051190613cf8565b836001600160a01b038116611a795760405162461bcd60e51b815260040161051190613cf8565b836001600160a01b038116611aa05760405162461bcd60e51b815260040161051190613cf8565b836040516370a0823160e01b81526001600160a01b038781166004830152600091908a16906370a0823190602401602060405180830381865afa158015611aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0f9190613e78565b9050611b266001600160a01b038a16898989612876565b6040516370a0823160e01b81526001600160a01b038881166004830152600091908b16906370a0823190602401602060405180830381865afa158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b949190613e78565b905086611ba18383613c8a565b14611bbe5760405162461bcd60e51b815260040161051190613e91565b50505050505050505050565b600061064f825490565b600080611be383600019613c8a565b600154909150811061064f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081b1bd8dac81a59608a1b6044820152606401610511565b600061092383836128e1565b6000610923838361290b565b600061092383836129fe565b60408051610160810182528254815260018301546001600160a01b039081166020830152600284015416918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a82018054600092611d6d9290918591610140840191611ce690613c27565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1290613c27565b8015611d5f5780601f10611d3457610100808354040283529160200191611d5f565b820191906000526020600020905b815481529060010190602001808311611d4257829003601f168201915b505050505081525050612204565b90506000818360090154611d819190613c77565b9050600082118015611d97575082600301548111155b611dd75760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b6044820152606401610511565b6001808401546001600160a01b03908116600090815260086020526040902091820154600386015491161515908303611ec4578015611e30578454336000908152600260205260409020611e2a91611c35565b50611e4c565b8454336000908152600360205260409020611e4a91611c35565b505b845460018601546001600160a01b03166000908152600960205260409020611e7391611c35565b50845460018601546040517fc6532367992b32e42a62dd89fc3574876d97d081a263aa6e030f34b79b7e6e8b91611ebb916001600160a01b0390911690339088904290613be8565b60405180910390a25b83826002015411611edb5760006002830155611ef1565b838260020154611eeb9190613c8a565b60028301555b8160020154600003611f3f578015611f23576001850154611f1d906004906001600160a01b0316612a4d565b50611f3f565b6001850154611f3d906006906001600160a01b0316612a4d565b505b6009850183905560028501546001860154611f67916001600160a01b03918216911686612a62565b84546001860154600987015460038801547ff93385ffdf40b698b13993c059834b8e91d0ca8e7abf827a34001ca03c03f6ff926001600160a01b03169133918991611fb191613c8a565b604080516001600160a01b03958616815294909316602085015291830152606082015242608082015260a0016112f4565b80600501544210156120365760405162461bcd60e51b815260206004820152601860248201527f4974206973206e6f742074696d6520746f20756e6c6f636b00000000000000006044820152606401610511565b60098101541561207c5760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b6044820152606401610511565b6001808201546001600160a01b0390811660009081526008602052604090209182015416158015906120c85782543360009081526002602052604090206120c291611c35565b506120e4565b82543360009081526003602052604090206120e291611c35565b505b6003830154600283015481106121005760006002840155612116565b8083600201546121109190613c8a565b60028401555b8260020154600003612164578115612148576001840154612142906004906001600160a01b0316612a4d565b50612164565b6001840154612162906006906001600160a01b0316612a4d565b505b6009808501829055845460018601546001600160a01b03166000908152602092909252604090912061219591611c35565b5060018401546121af906001600160a01b03163383612a62565b835460018501546040517fc6532367992b32e42a62dd89fc3574876d97d081a263aa6e030f34b79b7e6e8b916121f6916001600160a01b0390911690339086904290613be8565b60405180910390a250505050565b6000816060015160000361221a57506000919050565b81606001518261012001511061223257506000919050565b8160a0015142101561224657506000919050565b8160e0015160000361225a57506000919050565b600061227183606001518460c00151612710612a92565b9050600061228b8460600151856101000151612710612a92565b9050600082828660e001518760a00151426122a69190613c8a565b6122b09190613f05565b6122ba9190613f27565b6122c49190613c77565b905084606001518111156122f05784610120015185606001516122e79190613c8a565b95945050505050565b6101208501516122e79082613c8a565b6000546001600160a01b03163314610bf05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610511565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0383166123c257610bb98282612b41565b610bb9838383612bbb565b60606001600160a01b0385166123f55760405162461bcd60e51b815260040161051190613bc1565b60008881816001600160401b0381111561241157612411613529565b60405190808252806020026020018201604052801561243a578160200160208202803683370190505b50905060005b8281101561261e578a8a8281811061245a5761245a613c11565b905060200201356000036124a65760405162461bcd60e51b8152602060048201526013602482015272416d6f756e742063616e74206265207a65726f60681b6044820152606401610511565b8a8a828181106124b8576124b8613c11565b90506020020135846124ca9190613c77565b93506125428d8d838181106124e1576124e1613c11565b90506020020160208101906124f69190613651565b8a8a8e8e8681811061250a5761250a613c11565b905060200201358b60006004811061252457612524613c11565b60209081029190910151908d015160408e015160608f01518e6119dd565b82828151811061255457612554613c11565b60200260200101818152505081818151811061257257612572613c11565b60200260200101517f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8a8f8f858181106125ae576125ae613c11565b90506020020160208101906125c39190613651565b8e8e868181106125d5576125d5613c11565b905060200201358b6000600481106125ef576125ef613c11565b60200201516040516126049493929190613be8565b60405180910390a28061261681613c9d565b915050612440565b5061262b88333086611a2b565b9b9a5050505050505050505050565b600080600090506000836001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561269d575060408051601f3d908101601f1916820190925261269a91810190613f3e565b60015b6126e95760405162461bcd60e51b815260206004820152601c60248201527f5468697320746f6b656e206973206e6f742061204c5020746f6b656e000000006044820152606401610511565b91506001600160a01b0382161580159061270857506127088483612d30565b6127545760405162461bcd60e51b815260206004820152601d60248201527f5468697320746f6b656e206973206e6f742061204c5020746f6b656e2e0000006044820152606401610511565b5092915050565b600061276d8a8a898989898989612e93565b90506001600160a01b0388166127b1576001600160a01b038a16600090815260036020526040902061279f9082611c41565b506127ab60068a6130fe565b506127e1565b6001600160a01b038a1660009081526002602052604090206127d39082611c41565b506127df60048a6130fe565b505b6001600160a01b03808a16600090815260086020526040902080549091166128305780546001600160a01b03808c166001600160a01b0319928316178355600183018054918c16919092161790555b8781600201546128409190613c77565b60028201556001600160a01b038a1660009081526009602052604090206128679083611c41565b50509998505050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e359085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613113565b60008260000182815481106128f8576128f8613c11565b9060005260206000200154905092915050565b600081815260018301602052604081205480156129f457600061292f600183613c8a565b855490915060009061294390600190613c8a565b90508181146129a857600086600001828154811061296357612963613c11565b906000526020600020015490508087600001848154811061298657612986613c11565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806129b9576129b9613f5b565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061064f565b600091505061064f565b6000818152600183016020526040812054612a455750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561064f565b50600061064f565b6000610923836001600160a01b03841661290b565b6040516001600160a01b038316602482015260448101829052610bb990849063a9059cbb60e01b906064016128aa565b6000808060001985870985870292508281108382030391505080600003612acc57838281612ac257612ac2613eef565b0492505050610923565b808411612ad857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b816001600160a01b038116612b685760405162461bcd60e51b815260040161051190613cf8565b816001600160a01b038416803190612b8090856131e5565b6001600160a01b0385163184612b968383613c8a565b14612bb35760405162461bcd60e51b815260040161051190613e91565b505050505050565b826001600160a01b038116612be25760405162461bcd60e51b815260040161051190613cf8565b826001600160a01b038116612c095760405162461bcd60e51b815260040161051190613cf8565b826040516370a0823160e01b81526001600160a01b038681166004830152600091908816906370a0823190602401602060405180830381865afa158015612c54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c789190613e78565b9050612c8e6001600160a01b0388168787612a62565b6040516370a0823160e01b81526001600160a01b038781166004830152600091908916906370a0823190602401602060405180830381865afa158015612cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfc9190613e78565b905085612d098383613c8a565b14612d265760405162461bcd60e51b815260040161051190613e91565b5050505050505050565b6000808390506000836001600160a01b031663e6a43905836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da99190613f3e565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e0b9190613f3e565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015612e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e7a9190613f3e565b6001600160a01b03908116908616149250505092915050565b600154600090612ea590600019613c8a565b60408051610160810182528281526001600160a01b03808c16602083019081528d8216938301938452606083018c8152426080850190815260a085018d815260c086018d815260e087018d815261010088018d815260006101208a018181526101408b018f815260018054808201825593528b51600b9093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810193845599517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78b018054918d166001600160a01b03199283161790559c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88b01805491909c169d169c909c1790995595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf988015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa87015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb860155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc850155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe83015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff8201559251939450909283927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0001906130ee9082613db9565b5050505098975050505050505050565b6000610923836001600160a01b0384166129fe565b6000613168826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166132fe9092919063ffffffff16565b805190915015610bb957808060200190518101906131869190613f71565b610bb95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610511565b804710156132355760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610511565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613282576040519150601f19603f3d011682016040523d82523d6000602084013e613287565b606091505b5050905080610bb95760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610511565b606061330d8484600085613315565b949350505050565b6060824710156133765760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610511565b6001600160a01b0385163b6133cd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610511565b600080866001600160a01b031685876040516133e99190613f8e565b60006040518083038185875af1925050503d8060008114613426576040519150601f19603f3d011682016040523d82523d6000602084013e61342b565b606091505b509150915061343b828286613446565b979650505050505050565b60608315613455575081610923565b8251156134655782518084602001fd5b8160405162461bcd60e51b81526004016105119190613faa565b6040518061016001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6001600160a01b0381168114610df657600080fd5b803561350b816134eb565b919050565b8015158114610df657600080fd5b803561350b81613510565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261355057600080fd5b81356001600160401b038082111561356a5761356a613529565b604051601f8301601f19908116603f0116810190828211818310171561359257613592613529565b816040528381528660208588010111156135ab57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c087890312156135e457600080fd5b86356135ef816134eb565b955060208701356135ff816134eb565b9450604087013561360f81613510565b9350606087013592506080870135915060a08701356001600160401b0381111561363857600080fd5b61364489828a0161353f565b9150509295509295509295565b60006020828403121561366357600080fd5b8135610923816134eb565b60006020828403121561368057600080fd5b5035919050565b60005b838110156136a257818101518382015260200161368a565b50506000910152565b600081518084526136c3816020860160208601613687565b601f01601f19169290920160200192915050565b60006101608251845260208301516136fa60208601826001600160a01b03169052565b50604083015161371560408601826001600160a01b03169052565b50606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518282870152613778838701826136ab565b9695505050505050565b60208152600061092360208301846136d7565b6000806000606084860312156137aa57600080fd5b83356137b5816134eb565b95602085013595506040909401359392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561381f57603f1988860301845261380d8583516136d7565b945092850192908501906001016137f1565b5092979650505050505050565b6000806040838503121561383f57600080fd5b823591506020830135613851816134eb565b809150509250929050565b6000806040838503121561386f57600080fd5b823561387a816134eb565b946020939093013593505050565b6000806040838503121561389b57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561390e576138fb83855180516001600160a01b03908116835260208083015190911690830152604090810151910152565b92840192606092909201916001016138c6565b50909695505050505050565b81516001600160a01b03908116825260208084015190911690820152604080830151908201526060810161064f565b60008060006060848603121561395e57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060008060006101208a8c03121561399457600080fd5b893561399f816134eb565b985060208a01356139af816134eb565b975060408a01356139bf81613510565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a013591506101008a01356001600160401b038111156139fe57600080fd5b613a0a8c828d0161353f565b9150509295985092959850929598565b60008060408385031215613a2d57600080fd5b8235915060208301356001600160401b03811115613a4a57600080fd5b613a568582860161353f565b9150509250929050565b60008083601f840112613a7257600080fd5b5081356001600160401b03811115613a8957600080fd5b6020830191508360208260051b8501011115613aa457600080fd5b9250929050565b60008060008060008060008060008060006101208c8e031215613acd57600080fd5b6001600160401b03808d351115613ae357600080fd5b613af08e8e358f01613a60565b909c509a5060208d0135811015613b0657600080fd5b613b168e60208f01358f01613a60565b909a509850613b2760408e01613500565b9750613b3560608e0161351e565b965060808d0135955060a08d0135945060c08d0135935060e08d01359250806101008e01351115613b6557600080fd5b50613b778d6101008e01358e0161353f565b90509295989b509295989b9093969950565b6020808252825182820181905260009190848201906040850190845b8181101561390e57835183529284019291840191600101613ba5565b6020808252600d908201526c24b73b30b634b2103a37b5b2b760991b604082015260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613c3b57607f821691505b602082108103613c5b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561064f5761064f613c61565b8181038181111561064f5761064f613c61565b600060018201613caf57613caf613c61565b5060010190565b60208082526022908201527f596f7520617265206e6f7420746865206f776e6572206f662074686973206c6f604082015261636b60f01b606082015260800190565b6020808252600f908201526e494e56414c4944204144445245535360881b604082015260600190565b60208082526032908201527f53756d206f66205447452062707320616e64206379636c652073686f756c642060408201527106265206c657373207468616e2031303030360741b606082015260800190565b601f821115610bb957600081815260208120601f850160051c81016020861015613d9a5750805b601f850160051c820191505b81811015612bb357828155600101613da6565b81516001600160401b03811115613dd257613dd2613529565b613de681613de08454613c27565b84613d73565b602080601f831160018114613e1b5760008415613e035750858301515b600019600386901b1c1916600185901b178555612bb3565b600085815260208120601f198616915b82811015613e4a57888601518255948401946001909101908401613e2b565b5085821015613e685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215613e8a57600080fd5b5051919050565b602080825260409082018190527f4e6f7420656e6f75676820746f6b656e20776173207472616e73666572726564908201527f20496620746178207365742052656d6f7665204f757220416464726573732121606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082613f2257634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761064f5761064f613c61565b600060208284031215613f5057600080fd5b8151610923816134eb565b634e487b7160e01b600052603160045260246000fd5b600060208284031215613f8357600080fd5b815161092381613510565b60008251613fa0818460208701613687565b9190910192915050565b60208152600061092360208301846136ab56fea26469706673582212209b783d6e1a42affe756ddffc2d7ef9077565636ca85ed3fd453a8b5f21a0325e64736f6c63430008110033";

type ParioLockerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParioLockerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParioLocker__factory extends ContractFactory {
  constructor(...args: ParioLockerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ParioLocker> {
    return super.deploy(overrides || {}) as Promise<ParioLocker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ParioLocker {
    return super.attach(address) as ParioLocker;
  }
  override connect(signer: Signer): ParioLocker__factory {
    return super.connect(signer) as ParioLocker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParioLockerInterface {
    return new utils.Interface(_abi) as ParioLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParioLocker {
    return new Contract(address, _abi, signerOrProvider) as ParioLocker;
  }
}
